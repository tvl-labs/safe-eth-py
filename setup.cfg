[metadata]
name = safe-eth-py-tvl
version = 5.9.0
description = Safe Ecosystem Foundation utilities for Ethereum projects
long_description = file: README.rst
long_description_content_type = text/x-rst; charset=UTF-8
keywords =
    ethereum
    web3
    django
    safe
    cowswap
    gnosis
url = https://github.com/tvl-labs/safe-eth-py
author = UxÃ­o
author_email = uxio@safe.global
license = MIT License
license_files =
    LICENSE
classifiers =
    Environment :: Web Environment
    Framework :: Django
    Framework :: Django :: 2.0
    Framework :: Django :: 3.0
    Framework :: Django :: 4.0
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Topic :: Internet :: WWW/HTTP
    Topic :: Internet :: WWW/HTTP :: Dynamic Content
project_urls =
    Documentation = https://safe-eth-py-tvl.readthedocs.io/en/latest/
    Source = https://github.com/tvl-labs/safe-eth-py
    Tracker = https://github.com/tvl-labs/safe-eth-py/issues

[options]
packages = find:
platforms = any
include_package_data = True
install_requires =
    packaging
    py-evm>=0.7.0a1
    pysha3>=1.0.0,<2.0.0; python_version<"3.9"
    safe-pysha3>=1.0.0; python_version>="3.9"
    requests>=2
    web3>=6.2.0
python_requires = >=3.8

[options.package_data]
gnosis =
    py.typed
    *.json

[options.extras_require]
django =
    django>=2
    django-filter>=2
    djangorestframework>=2

[flake8]
max-line-length = 88
select = C,E,F,W,B,B950
extend-ignore = E203,E501,F841,W503
exclude = .tox,.git,*/migrations/*,*/static/CACHE/*,docs,node_modules,venv

[pycodestyle]
max-line-length = 120
exclude = .tox,.git,*/migrations/*,*/static/CACHE/*,docs,node_modules,venv

[isort]
profile = black
default_section = THIRDPARTY
known_first_party = gnosis
known_gnosis = py_eth_sig_utils
known_django = django
sections = FUTURE,STDLIB,DJANGO,THIRDPARTY,GNOSIS,FIRSTPARTY,LOCALFOLDER

[tool:pytest]
env =
    DJANGO_SETTINGS_MODULE=config.settings.test

[mypy]
python_version = 3.10
check_untyped_defs = True
ignore_missing_imports = True
warn_unused_ignores = True
warn_redundant_casts = True
warn_unused_configs = True

[coverage:report]
exclude_lines =
# Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain if tests don't hit defensive assertion code:
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if __name__ == .__main__.:
    if settings.DEBUG

    # Ignore pass lines
    pass

[coverage:run]
include = safe_transaction_service/*
omit =
    *__init__.py*
    *tests*
    */migrations/*
